{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/enzod/integrador-07_07/Integrador_reservas/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ReservasPage = class ReservasPage {\n  constructor(navCtrl, toastController, firebaseService // Adicione private firebaseService: FirebaseService\n  ) {\n    this.navCtrl = navCtrl;\n    this.toastController = toastController;\n    this.firebaseService = firebaseService;\n    this.reserva = {\n      nome: '',\n      email: '',\n      numeroPessoas: null,\n      data: '',\n      horario: '',\n      tipoMesa: ''\n    };\n    this.limiteMesas = {\n      aLaCarte: 20,\n      rodizio: 15\n    };\n    const today = new Date();\n    this.currentDate = today.toISOString().split('T')[0];\n  }\n  irParaLogin() {\n    this.navCtrl.navigateForward('/login');\n  }\n  submitReserva() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const {\n        data,\n        tipoMesa\n      } = _this.reserva;\n      try {\n        // Verifique o número de reservas existentes para a data e tipo de mesa\n        const reservasSnapshot = yield _this.firebaseService.getReservasPorDataETipo(data, tipoMesa).toPromise();\n        // Verifique se reservasSnapshot existe\n        if (!reservasSnapshot) {\n          _this.mostrarToast('Erro ao obter reservas existentes. Tente novamente.');\n          return;\n        }\n        const numeroReservasExistentes = reservasSnapshot.size;\n        // Verifique se o limite foi atingido\n        if (tipoMesa === 'aLaCarte' && numeroReservasExistentes >= _this.limiteMesas.aLaCarte || tipoMesa === 'rodizio' && numeroReservasExistentes >= _this.limiteMesas.rodizio) {\n          _this.mostrarToast(`Limite de mesas ${tipoMesa} atingido para a data ${data}.`);\n          return;\n        }\n        // Adicione a nova reserva se o limite não foi atingido\n        yield _this.firebaseService.addReserva(_this.reserva);\n        _this.mostrarToast('Reserva realizada com sucesso!');\n        _this.resetarFormulario(); // Resetar o formulário após a reserva\n      } catch (error) {\n        console.error('Erro ao adicionar reserva: ', error);\n        _this.mostrarToast('Erro ao realizar a reserva. Tente novamente.');\n      }\n    })();\n  }\n  mostrarToast(mensagem) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const toast = yield _this2.toastController.create({\n        message: mensagem,\n        duration: 3000,\n        // 3 segundos\n        position: 'bottom'\n      });\n      toast.present();\n    })();\n  }\n  resetarFormulario() {\n    this.reserva = {\n      nome: '',\n      email: '',\n      numeroPessoas: null,\n      data: '',\n      horario: '',\n      tipoMesa: ''\n    };\n  }\n};\nReservasPage = __decorate([Component({\n  selector: 'app-reservas',\n  templateUrl: './reservas.page.html',\n  styleUrls: ['./reservas.page.scss']\n})], ReservasPage);\nexport { ReservasPage };","map":{"version":3,"names":["Component","ReservasPage","constructor","navCtrl","toastController","firebaseService","reserva","nome","email","numeroPessoas","data","horario","tipoMesa","limiteMesas","aLaCarte","rodizio","today","Date","currentDate","toISOString","split","irParaLogin","navigateForward","submitReserva","_this","_asyncToGenerator","reservasSnapshot","getReservasPorDataETipo","toPromise","mostrarToast","numeroReservasExistentes","size","addReserva","resetarFormulario","error","console","mensagem","_this2","toast","create","message","duration","position","present","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\enzod\\integrador-07_07\\Integrador_reservas\\src\\app\\views\\reservas\\reservas.page.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { NavController, ToastController } from '@ionic/angular';\r\nimport { FirebaseService } from '../../firebase.service';  // Adicione esta linha\r\n\r\n@Component({\r\n  selector: 'app-reservas',\r\n  templateUrl: './reservas.page.html',\r\n  styleUrls: ['./reservas.page.scss'],\r\n})\r\nexport class ReservasPage {\r\n\r\n  currentDate: string;\r\n  reserva: any = {\r\n    nome: '',\r\n    email: '',\r\n    numeroPessoas: null,\r\n    data: '',\r\n    horario: '',\r\n    tipoMesa: ''\r\n  };\r\n\r\n  limiteMesas = {\r\n    aLaCarte: 20,\r\n    rodizio: 15\r\n  };\r\n\r\n  constructor(\r\n    private navCtrl: NavController,\r\n    private toastController: ToastController,\r\n    private firebaseService: FirebaseService // Adicione private firebaseService: FirebaseService\r\n  ) {\r\n    const today = new Date();\r\n    this.currentDate = today.toISOString().split('T')[0];\r\n  }\r\n\r\n  irParaLogin() {\r\n    this.navCtrl.navigateForward('/login');\r\n  }\r\n\r\n  async submitReserva() {\r\n    const { data, tipoMesa } = this.reserva;\r\n\r\n    try {\r\n      // Verifique o número de reservas existentes para a data e tipo de mesa\r\n      const reservasSnapshot = await this.firebaseService.getReservasPorDataETipo(data, tipoMesa).toPromise();\r\n\r\n      // Verifique se reservasSnapshot existe\r\n      if (!reservasSnapshot) {\r\n        this.mostrarToast('Erro ao obter reservas existentes. Tente novamente.');\r\n        return;\r\n      }\r\n\r\n      const numeroReservasExistentes = reservasSnapshot.size;\r\n\r\n      // Verifique se o limite foi atingido\r\n      if ((tipoMesa === 'aLaCarte' && numeroReservasExistentes >= this.limiteMesas.aLaCarte) ||\r\n          (tipoMesa === 'rodizio' && numeroReservasExistentes >= this.limiteMesas.rodizio)) {\r\n        this.mostrarToast(`Limite de mesas ${tipoMesa} atingido para a data ${data}.`);\r\n        return;\r\n      }\r\n\r\n      // Adicione a nova reserva se o limite não foi atingido\r\n      await this.firebaseService.addReserva(this.reserva);\r\n      this.mostrarToast('Reserva realizada com sucesso!');\r\n      this.resetarFormulario(); // Resetar o formulário após a reserva\r\n\r\n    } catch (error) {\r\n      console.error('Erro ao adicionar reserva: ', error);\r\n      this.mostrarToast('Erro ao realizar a reserva. Tente novamente.');\r\n    }\r\n  }\r\n\r\n  async mostrarToast(mensagem: string) {\r\n    const toast = await this.toastController.create({\r\n      message: mensagem,\r\n      duration: 3000, // 3 segundos\r\n      position: 'bottom'\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n  resetarFormulario() {\r\n    this.reserva = {\r\n      nome: '',\r\n      email: '',\r\n      numeroPessoas: null,\r\n      data: '',\r\n      horario: '',\r\n      tipoMesa: ''\r\n    };\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}