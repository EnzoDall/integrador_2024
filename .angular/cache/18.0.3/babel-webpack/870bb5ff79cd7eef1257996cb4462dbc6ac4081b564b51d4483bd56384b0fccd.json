{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/firestore\";\nexport class FirebaseService {\n  constructor(firestore) {\n    this.firestore = firestore;\n    this.collectionName = 'reservas';\n  }\n  addReserva(reserva) {\n    return this.firestore.collection('reservas').add(reserva);\n  }\n  getReservasPorDataETipo(data, tipoMesa) {\n    return this.firestore.collection('reservas', ref => ref.where('data', '==', data).where('tipoMesa', '==', tipoMesa)).get();\n  }\n  getReservas() {\n    return this.firestore.collection(this.collectionName).snapshotChanges();\n  }\n  updateReserva(id, data) {\n    return this.firestore.doc(`${this.collectionName}/${id}`).update(data);\n  }\n  deleteReserva(id) {\n    return this.firestore.doc(`${this.collectionName}/${id}`).delete();\n  }\n  static #_ = this.ɵfac = function FirebaseService_Factory(t) {\n    return new (t || FirebaseService)(i0.ɵɵinject(i1.AngularFirestore));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FirebaseService,\n    factory: FirebaseService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["FirebaseService","constructor","firestore","collectionName","addReserva","reserva","collection","add","getReservasPorDataETipo","data","tipoMesa","ref","where","get","getReservas","snapshotChanges","updateReserva","id","doc","update","deleteReserva","delete","_","i0","ɵɵinject","i1","AngularFirestore","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\enzod\\integrador-07_07\\Integrador_reservas\\src\\app\\firebase.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { AngularFirestore, DocumentChangeAction } from '@angular/fire/compat/firestore';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FirebaseService {\r\n\r\n  private collectionName = 'reservas';\r\n\r\n  constructor(private firestore: AngularFirestore) { }\r\n\r\n  addReserva(reserva: any) {\r\n    return this.firestore.collection('reservas').add(reserva);\r\n  }\r\n\r\n  getReservasPorDataETipo(data: string, tipoMesa: string) {\r\n    return this.firestore.collection('reservas', ref => \r\n      ref.where('data', '==', data).where('tipoMesa', '==', tipoMesa)\r\n    ).get();\r\n  }\r\n\r\n  getReservas(): Observable<DocumentChangeAction<unknown>[]> {\r\n    return this.firestore.collection(this.collectionName).snapshotChanges();\r\n  }\r\n\r\n  updateReserva(id: string, data: any) {\r\n    return this.firestore.doc(`${this.collectionName}/${id}`).update(data);\r\n  }\r\n\r\n  deleteReserva(id: string) {\r\n    return this.firestore.doc(`${this.collectionName}/${id}`).delete();\r\n  }\r\n}\r\n"],"mappings":";;AAOA,OAAM,MAAOA,eAAe;EAI1BC,YAAoBC,SAA2B;IAA3B,KAAAA,SAAS,GAATA,SAAS;IAFrB,KAAAC,cAAc,GAAG,UAAU;EAEgB;EAEnDC,UAAUA,CAACC,OAAY;IACrB,OAAO,IAAI,CAACH,SAAS,CAACI,UAAU,CAAC,UAAU,CAAC,CAACC,GAAG,CAACF,OAAO,CAAC;EAC3D;EAEAG,uBAAuBA,CAACC,IAAY,EAAEC,QAAgB;IACpD,OAAO,IAAI,CAACR,SAAS,CAACI,UAAU,CAAC,UAAU,EAAEK,GAAG,IAC9CA,GAAG,CAACC,KAAK,CAAC,MAAM,EAAE,IAAI,EAAEH,IAAI,CAAC,CAACG,KAAK,CAAC,UAAU,EAAE,IAAI,EAAEF,QAAQ,CAAC,CAChE,CAACG,GAAG,EAAE;EACT;EAEAC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACZ,SAAS,CAACI,UAAU,CAAC,IAAI,CAACH,cAAc,CAAC,CAACY,eAAe,EAAE;EACzE;EAEAC,aAAaA,CAACC,EAAU,EAAER,IAAS;IACjC,OAAO,IAAI,CAACP,SAAS,CAACgB,GAAG,CAAC,GAAG,IAAI,CAACf,cAAc,IAAIc,EAAE,EAAE,CAAC,CAACE,MAAM,CAACV,IAAI,CAAC;EACxE;EAEAW,aAAaA,CAACH,EAAU;IACtB,OAAO,IAAI,CAACf,SAAS,CAACgB,GAAG,CAAC,GAAG,IAAI,CAACf,cAAc,IAAIc,EAAE,EAAE,CAAC,CAACI,MAAM,EAAE;EACpE;EAAC,QAAAC,CAAA,G;qBA1BUtB,eAAe,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,gBAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAf3B,eAAe;IAAA4B,OAAA,EAAf5B,eAAe,CAAA6B,IAAA;IAAAC,UAAA,EAFd;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}