{"ast":null,"code":"import { of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/firestore\";\nexport class FirebaseService {\n  constructor(firestore) {\n    this.firestore = firestore;\n    this.collectionName = 'reservas';\n  }\n  addReserva(reserva) {\n    // Verifica se a reserva é feita com pelo menos uma hora de antecedência\n    if (!this.isHoraMinimaAntecedenciaValida(reserva.data, reserva.horario)) {\n      return Promise.reject('Não é possível fazer uma reserva com menos de uma hora de antecedência.');\n    }\n    return this.firestore.collection(this.collectionName).add(reserva);\n  }\n  isHoraMinimaAntecedenciaValida(data, horario) {\n    const horaAtual = new Date();\n    const horaReserva = new Date(`${data}T${horario}`);\n    // Adiciona uma hora à hora atual\n    horaAtual.setHours(horaAtual.getHours() + 1);\n    // Verifica se a hora da reserva é pelo menos uma hora no futuro\n    return horaReserva > horaAtual;\n  }\n  getReservasPorDataETipo(data, tipoMesa) {\n    return this.firestore.collection(this.collectionName, ref => ref.where('data', '==', data).where('tipoMesa', '==', tipoMesa)).snapshotChanges().pipe(map(actions => {\n      return actions.map(a => {\n        const data = a.payload.doc.data();\n        const id = a.payload.doc.id;\n        return {\n          id,\n          ...data\n        };\n      });\n    }), catchError(error => {\n      console.error('Erro ao buscar reservas por data e tipo: ', error);\n      return of([]);\n    }));\n  }\n  getReservas() {\n    return this.firestore.collection(this.collectionName).snapshotChanges().pipe(map(actions => {\n      return actions.map(a => {\n        const data = a.payload.doc.data();\n        const id = a.payload.doc.id;\n        return {\n          id,\n          ...data\n        };\n      });\n    }), catchError(error => {\n      console.error('Erro ao buscar reservas: ', error);\n      return of([]);\n    }));\n  }\n  updateReserva(id, data) {\n    return this.firestore.doc(`${this.collectionName}/${id}`).update(data);\n  }\n  deleteReserva(id) {\n    return this.firestore.doc(`${this.collectionName}/${id}`).delete();\n  }\n  deleteExpiredReservas() {\n    const now = new Date();\n    const currentDate = now.toISOString().split('T')[0];\n    const currentTime = `${now.getHours()}:${now.getMinutes()}`;\n    return this.firestore.collection(this.collectionName).ref.get().then(snapshot => {\n      const batch = this.firestore.firestore.batch();\n      snapshot.forEach(doc => {\n        const reserva = doc.data();\n        if (reserva.data < currentDate || reserva.data === currentDate && reserva.horario < currentTime) {\n          batch.delete(doc.ref);\n        }\n      });\n      return batch.commit();\n    });\n  }\n  static #_ = this.ɵfac = function FirebaseService_Factory(t) {\n    return new (t || FirebaseService)(i0.ɵɵinject(i1.AngularFirestore));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FirebaseService,\n    factory: FirebaseService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["of","map","catchError","FirebaseService","constructor","firestore","collectionName","addReserva","reserva","isHoraMinimaAntecedenciaValida","data","horario","Promise","reject","collection","add","horaAtual","Date","horaReserva","setHours","getHours","getReservasPorDataETipo","tipoMesa","ref","where","snapshotChanges","pipe","actions","a","payload","doc","id","error","console","getReservas","updateReserva","update","deleteReserva","delete","deleteExpiredReservas","now","currentDate","toISOString","split","currentTime","getMinutes","get","then","snapshot","batch","forEach","commit","_","i0","ɵɵinject","i1","AngularFirestore","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Aluno\\Desktop\\Nova pasta\\integrador_2024\\src\\app\\firebase.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FirebaseService {\r\n\r\n  private collectionName = 'reservas';\r\n\r\n  constructor(private firestore: AngularFirestore) { }\r\n\r\n  addReserva(reserva: any): Promise<any> {\r\n    // Verifica se a reserva é feita com pelo menos uma hora de antecedência\r\n    if (!this.isHoraMinimaAntecedenciaValida(reserva.data, reserva.horario)) {\r\n      return Promise.reject('Não é possível fazer uma reserva com menos de uma hora de antecedência.');\r\n    }\r\n    \r\n    return this.firestore.collection(this.collectionName).add(reserva);\r\n  }\r\n\r\n  private isHoraMinimaAntecedenciaValida(data: string, horario: string): boolean {\r\n    const horaAtual = new Date();\r\n    const horaReserva = new Date(`${data}T${horario}`);\r\n\r\n    // Adiciona uma hora à hora atual\r\n    horaAtual.setHours(horaAtual.getHours() + 1);\r\n\r\n    // Verifica se a hora da reserva é pelo menos uma hora no futuro\r\n    return horaReserva > horaAtual;\r\n  }\r\n\r\n  getReservasPorDataETipo(data: string, tipoMesa: string): Observable<any> {\r\n    return this.firestore.collection(this.collectionName, ref => \r\n      ref.where('data', '==', data).where('tipoMesa', '==', tipoMesa)\r\n    ).snapshotChanges().pipe(\r\n      map(actions => {\r\n        return actions.map(a => {\r\n          const data = a.payload.doc.data() as any;\r\n          const id = a.payload.doc.id;\r\n          return { id, ...data };\r\n        });\r\n      }),\r\n      catchError(error => {\r\n        console.error('Erro ao buscar reservas por data e tipo: ', error);\r\n        return of([]);\r\n      })\r\n    );\r\n  }\r\n\r\n  getReservas(): Observable<any[]> {\r\n    return this.firestore.collection(this.collectionName).snapshotChanges().pipe(\r\n      map(actions => {\r\n        return actions.map(a => {\r\n          const data = a.payload.doc.data() as any;\r\n          const id = a.payload.doc.id;\r\n          return { id, ...data };\r\n        });\r\n      }),\r\n      catchError(error => {\r\n        console.error('Erro ao buscar reservas: ', error);\r\n        return of([]);\r\n      })\r\n    );\r\n  }\r\n\r\n  updateReserva(id: string, data: any): Promise<void> {\r\n    return this.firestore.doc(`${this.collectionName}/${id}`).update(data);\r\n  }\r\n\r\n  deleteReserva(id: string): Promise<void> {\r\n    return this.firestore.doc(`${this.collectionName}/${id}`).delete();\r\n  }\r\n\r\n  deleteExpiredReservas(): Promise<void> {\r\n    const now = new Date();\r\n    const currentDate = now.toISOString().split('T')[0];\r\n    const currentTime = `${now.getHours()}:${now.getMinutes()}`;\r\n\r\n    return this.firestore.collection(this.collectionName).ref.get().then(snapshot => {\r\n      const batch = this.firestore.firestore.batch();\r\n      snapshot.forEach(doc => {\r\n        const reserva = doc.data() as any;\r\n        if (reserva.data < currentDate || (reserva.data === currentDate && reserva.horario < currentTime)) {\r\n          batch.delete(doc.ref);\r\n        }\r\n      });\r\n      return batch.commit();\r\n    });\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}