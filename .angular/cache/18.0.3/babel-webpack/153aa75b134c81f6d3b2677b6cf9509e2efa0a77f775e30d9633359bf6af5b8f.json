{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/enzod/integrador-07_07/Integrador_reservas/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ReservasPage = class ReservasPage {\n  constructor(navCtrl, firebaseService, toastController) {\n    this.navCtrl = navCtrl;\n    this.firebaseService = firebaseService;\n    this.toastController = toastController;\n    this.reserva = {\n      nome: '',\n      email: '',\n      numeroPessoas: '',\n      tipoMesa: '',\n      data: '',\n      horario: ''\n    };\n    this.currentDate = new Date().toISOString(); // Inicializa com a data atual\n    this.limitesMesas$ = this.firebaseService.getLimiteMesas(); // Obtém os limites de mesas do Firebase\n  }\n  irParaLogin() {\n    this.navCtrl.navigateForward('/login');\n  }\n  submitReserva() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const disponivel = yield _this.firebaseService.verificarDisponibilidade(_this.reserva.tipoMesa).toPromise();\n        if (!disponivel) {\n          _this.mostrarToast('Não há mesas disponíveis para este tipo. Por favor, escolha outro tipo.');\n          return;\n        }\n        // Adicionar reserva ao Firebase\n        yield _this.firebaseService.addReserva({\n          nome: _this.reserva.nome,\n          email: _this.reserva.email,\n          numeroPessoas: _this.reserva.numeroPessoas,\n          tipoMesa: _this.reserva.tipoMesa,\n          data: _this.reserva.data,\n          horario: _this.reserva.horario\n        });\n        // Mostrar mensagem de sucesso\n        _this.mostrarToast('Reserva realizada com sucesso!');\n        // Redirecionar para outra página ou fazer alguma ação após a reserva ser realizada\n        // this.navCtrl.navigateForward('/outra-pagina');\n      } catch (error) {\n        console.error('Erro ao adicionar reserva:', error);\n        _this.mostrarToast('Erro ao realizar a reserva. Por favor, tente novamente mais tarde.');\n      }\n    })();\n  }\n  mostrarToast(mensagem) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const toast = yield _this2.toastController.create({\n        message: mensagem,\n        duration: 3000,\n        // 3 segundos\n        position: 'bottom'\n      });\n      toast.present();\n    })();\n  }\n};\nReservasPage = __decorate([Component({\n  selector: 'app-reservas',\n  templateUrl: './reservas.page.html',\n  styleUrls: ['./reservas.page.scss']\n})], ReservasPage);\nexport { ReservasPage };","map":{"version":3,"names":["Component","ReservasPage","constructor","navCtrl","firebaseService","toastController","reserva","nome","email","numeroPessoas","tipoMesa","data","horario","currentDate","Date","toISOString","limitesMesas$","getLimiteMesas","irParaLogin","navigateForward","submitReserva","_this","_asyncToGenerator","disponivel","verificarDisponibilidade","toPromise","mostrarToast","addReserva","error","console","mensagem","_this2","toast","create","message","duration","position","present","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\enzod\\integrador-07_07\\Integrador_reservas\\src\\app\\views\\reservas\\reservas.page.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { NavController, ToastController } from '@ionic/angular';\r\nimport { FirebaseService } from 'caminho/para/firebase.service'; // Substitua pelo caminho correto do seu serviço Firebase\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-reservas',\r\n  templateUrl: './reservas.page.html',\r\n  styleUrls: ['./reservas.page.scss'],\r\n})\r\nexport class ReservasPage {\r\n\r\n  currentDate: string;\r\n  reserva = {\r\n    nome: '',\r\n    email: '',\r\n    numeroPessoas: '',\r\n    tipoMesa: '',\r\n    data: '',\r\n    horario: ''\r\n  };\r\n\r\n  limitesMesas$: Observable<any[]>;\r\n\r\n  constructor(\r\n    private navCtrl: NavController,\r\n    private firebaseService: FirebaseService,\r\n    private toastController: ToastController\r\n  ) {\r\n    this.currentDate = new Date().toISOString(); // Inicializa com a data atual\r\n    this.limitesMesas$ = this.firebaseService.getLimiteMesas(); // Obtém os limites de mesas do Firebase\r\n  }\r\n\r\n  irParaLogin() {\r\n    this.navCtrl.navigateForward('/login');\r\n  }\r\n\r\n  async submitReserva() {\r\n    try {\r\n      const disponivel = await this.firebaseService.verificarDisponibilidade(this.reserva.tipoMesa).toPromise();\r\n      if (!disponivel) {\r\n        this.mostrarToast('Não há mesas disponíveis para este tipo. Por favor, escolha outro tipo.');\r\n        return;\r\n      }\r\n\r\n      // Adicionar reserva ao Firebase\r\n      await this.firebaseService.addReserva({\r\n        nome: this.reserva.nome,\r\n        email: this.reserva.email,\r\n        numeroPessoas: this.reserva.numeroPessoas,\r\n        tipoMesa: this.reserva.tipoMesa,\r\n        data: this.reserva.data,\r\n        horario: this.reserva.horario\r\n      });\r\n\r\n      // Mostrar mensagem de sucesso\r\n      this.mostrarToast('Reserva realizada com sucesso!');\r\n      \r\n      // Redirecionar para outra página ou fazer alguma ação após a reserva ser realizada\r\n      // this.navCtrl.navigateForward('/outra-pagina');\r\n\r\n    } catch (error) {\r\n      console.error('Erro ao adicionar reserva:', error);\r\n      this.mostrarToast('Erro ao realizar a reserva. Por favor, tente novamente mais tarde.');\r\n    }\r\n  }\r\n\r\n  async mostrarToast(mensagem: string) {\r\n    const toast = await this.toastController.create({\r\n      message: mensagem,\r\n      duration: 3000, // 3 segundos\r\n      position: 'bottom'\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n}\r\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,eAAe;AAUlC,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EAcvBC,YACUC,OAAsB,EACtBC,eAAgC,EAChCC,eAAgC;IAFhC,KAAAF,OAAO,GAAPA,OAAO;IACP,KAAAC,eAAe,GAAfA,eAAe;IACf,KAAAC,eAAe,GAAfA,eAAe;IAdzB,KAAAC,OAAO,GAAG;MACRC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,aAAa,EAAE,EAAE;MACjBC,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE,EAAE;MACRC,OAAO,EAAE;KACV;IASC,IAAI,CAACC,WAAW,GAAG,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE,CAAC,CAAC;IAC7C,IAAI,CAACC,aAAa,GAAG,IAAI,CAACZ,eAAe,CAACa,cAAc,EAAE,CAAC,CAAC;EAC9D;EAEAC,WAAWA,CAAA;IACT,IAAI,CAACf,OAAO,CAACgB,eAAe,CAAC,QAAQ,CAAC;EACxC;EAEMC,aAAaA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACjB,IAAI;QACF,MAAMC,UAAU,SAASF,KAAI,CAACjB,eAAe,CAACoB,wBAAwB,CAACH,KAAI,CAACf,OAAO,CAACI,QAAQ,CAAC,CAACe,SAAS,EAAE;QACzG,IAAI,CAACF,UAAU,EAAE;UACfF,KAAI,CAACK,YAAY,CAAC,yEAAyE,CAAC;UAC5F;QACF;QAEA;QACA,MAAML,KAAI,CAACjB,eAAe,CAACuB,UAAU,CAAC;UACpCpB,IAAI,EAAEc,KAAI,CAACf,OAAO,CAACC,IAAI;UACvBC,KAAK,EAAEa,KAAI,CAACf,OAAO,CAACE,KAAK;UACzBC,aAAa,EAAEY,KAAI,CAACf,OAAO,CAACG,aAAa;UACzCC,QAAQ,EAAEW,KAAI,CAACf,OAAO,CAACI,QAAQ;UAC/BC,IAAI,EAAEU,KAAI,CAACf,OAAO,CAACK,IAAI;UACvBC,OAAO,EAAES,KAAI,CAACf,OAAO,CAACM;SACvB,CAAC;QAEF;QACAS,KAAI,CAACK,YAAY,CAAC,gCAAgC,CAAC;QAEnD;QACA;MAEF,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClDP,KAAI,CAACK,YAAY,CAAC,oEAAoE,CAAC;MACzF;IAAC;EACH;EAEMA,YAAYA,CAACI,QAAgB;IAAA,IAAAC,MAAA;IAAA,OAAAT,iBAAA;MACjC,MAAMU,KAAK,SAASD,MAAI,CAAC1B,eAAe,CAAC4B,MAAM,CAAC;QAC9CC,OAAO,EAAEJ,QAAQ;QACjBK,QAAQ,EAAE,IAAI;QAAE;QAChBC,QAAQ,EAAE;OACX,CAAC;MACFJ,KAAK,CAACK,OAAO,EAAE;IAAC;EAClB;CAED;AAlEYpC,YAAY,GAAAqC,UAAA,EALxBtC,SAAS,CAAC;EACTuC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EACWxC,YAAY,CAkExB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}