{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { of } from 'rxjs'; // Importe 'of' para inicialização com array vazio\nimport { map, catchError } from 'rxjs/operators';\nlet AdminReservasPage = class AdminReservasPage {\n  constructor(firebaseService) {\n    this.firebaseService = firebaseService;\n    this.reservas$ = of([]); // Inicializa com array vazio usando 'of' do RxJS\n  }\n  ngOnInit() {\n    this.reservas$ = this.firebaseService.getReservas().pipe(map(actions => actions.map(a => {\n      const data = a.payload.doc.data();\n      const id = a.payload.doc.id;\n      return {\n        id,\n        ...data\n      };\n    })), catchError(error => {\n      console.error('Erro ao carregar reservas: ', error);\n      return of([]); // Retorna um array vazio em caso de erro\n    }));\n  }\n};\nAdminReservasPage = __decorate([Component({\n  selector: 'app-admin-reservas',\n  templateUrl: './admin-reservas.page.html',\n  styleUrls: ['./admin-reservas.page.scss']\n})], AdminReservasPage);\nexport { AdminReservasPage };","map":{"version":3,"names":["Component","of","map","catchError","AdminReservasPage","constructor","firebaseService","reservas$","ngOnInit","getReservas","pipe","actions","a","data","payload","doc","id","error","console","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\enzod\\integrador-07_07\\Integrador_reservas\\src\\app\\views\\admin\\admin.page.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FirebaseService } from '../../firebase.service';\r\nimport { Observable, of } from 'rxjs'; // Importe 'of' para inicialização com array vazio\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-admin-reservas',\r\n  templateUrl: './admin-reservas.page.html',\r\n  styleUrls: ['./admin-reservas.page.scss'],\r\n})\r\nexport class AdminReservasPage implements OnInit {\r\n\r\n  reservas$: Observable<any[]> = of([]); // Inicializa com array vazio usando 'of' do RxJS\r\n\r\n  constructor(private firebaseService: FirebaseService) {}\r\n\r\n  ngOnInit() {\r\n    this.reservas$ = this.firebaseService.getReservas().pipe(\r\n      map(actions => actions.map(a => {\r\n        const data = a.payload.doc.data() as any;\r\n        const id = a.payload.doc.id;\r\n        return { id, ...data };\r\n      })),\r\n      catchError(error => {\r\n        console.error('Erro ao carregar reservas: ', error);\r\n        return of([]); // Retorna um array vazio em caso de erro\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAEjD,SAAqBC,EAAE,QAAQ,MAAM,CAAC,CAAC;AACvC,SAASC,GAAG,EAAEC,UAAU,QAAQ,gBAAgB;AAOzC,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAI5BC,YAAoBC,eAAgC;IAAhC,KAAAA,eAAe,GAAfA,eAAe;IAFnC,KAAAC,SAAS,GAAsBN,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EAEgB;EAEvDO,QAAQA,CAAA;IACN,IAAI,CAACD,SAAS,GAAG,IAAI,CAACD,eAAe,CAACG,WAAW,EAAE,CAACC,IAAI,CACtDR,GAAG,CAACS,OAAO,IAAIA,OAAO,CAACT,GAAG,CAACU,CAAC,IAAG;MAC7B,MAAMC,IAAI,GAAGD,CAAC,CAACE,OAAO,CAACC,GAAG,CAACF,IAAI,EAAS;MACxC,MAAMG,EAAE,GAAGJ,CAAC,CAACE,OAAO,CAACC,GAAG,CAACC,EAAE;MAC3B,OAAO;QAAEA,EAAE;QAAE,GAAGH;MAAI,CAAE;IACxB,CAAC,CAAC,CAAC,EACHV,UAAU,CAACc,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD,OAAOhB,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,CACH;EACH;CAED;AApBYG,iBAAiB,GAAAe,UAAA,EAL7BnB,SAAS,CAAC;EACToB,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,C,EACWlB,iBAAiB,CAoB7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}